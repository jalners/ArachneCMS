@model WWW.ViewModels.PageModel
@{
    Model.Meta.Title = "Гравитация кода / ArachneCMS";
    //TODO:Metas
    Model.Meta.OpenGraph.Add("url", this.Request.Url.ToString());
    Model.Meta.OpenGraph.Add("title", Model.Meta.Title);
    Model.Meta.OpenGraph.Add("image", this.Request.Url + "/gravitatsiya.jpg");
    Model.Meta.OpenGraph.Add("description", "Когда наблюдаешь за жизненным циклом систем, регулярно нарушающих принципы SOLID невольно начинаешь задумываться о существовании силы, которая во многом напоминает силы гравитационного взаимодействия.");
}

<div class="page-title">
    <div class="container">
        <h1>Гравитация кода</h1>
        <ul class="breadcrumb">
            <li><a href="/">В начало</a></li>
            <li><a class="todo" href="#/ru/wiki">Вики</a></li>
        </ul>
    </div>
</div>

<div class="container main-content clearfix">
    <img src="/ru/wiki/gravitatsiya-koda/gravitatsiya.jpg" alt="Гравитация" class="image-right" />

    <p>
        Когда наблюдаешь за жизненным циклом систем, регулярно нарушающих принципы
        <a class="todo" href="#/ru/wiki/solid">SOLID</a>, невольно начинаешь задумываться о
        существовании силы, которая во многом напоминает силы гравитационного взаимодействия.
        Когда рост массы тела сопровождается ростом силы, с которой оно притягивает находящиеся
        поблизости объекты. Под действием этой силы наша планета тянет вниз подброшенные нами
        вверх предметы.
    </p>
    
    <p>
        Что-то похожее можно наблюдать и с программным кодом. Чем больше разрастается некоторый
        класс, тем более <a class="todo" href="#/ru/wiki/kosnost-koda">косным</a> он становится.
        А значит выделить из него частную зону ответственности становится все сложнее. Тогда
        классы, которые должны были бы зависеть только от этой ответственности или, пользуясь
        нашей гравитационной метафорой оказались поблизости, начинают зависеть от всего объекта.
        Так постепенно образуются <a class="todo" href="#/ru/wiki/zhestkost-koda">жесткие</a>
        конструкции все большего размера.
    </p>

    <p>
        Каждый раз, когда такая конструкция притягивает к себе очередной класс, она добавляет
        еще одну причину притянуть следующий и так ее сила гравитации с каждым разом становится
        все больше и больше. Проникая в код исходного рассматриваемого класса этот процесс
        порождает гиганты, известные как
        <a class="todo" href="#/ru/wiki/bozhestvennyi-obekt">Божественные объекты</a>.
    </p>

    <p>
        Если ситуацию вовремя не остановить, то может произойти то, что происходит в астрофизике
        со звездами высокой массы под действием сил гравитации. А именно, гравитационный коллапс
        с образованием сверхновых. В нашем случае это чаще выражается в виде проекта, который
        проще полностью переделать, чем исправить. И многие из нас с такими ситуациями
        сталкивались.
    </p>

    <p>
        Мы частой привыкли говорить о слабой или сильной связанности кода. В нашей физической
        метафоре ее можно сравнить с массой. Действительно, масса &mdash; это мера инертности
        тела или его готовности к быстрому движению при воздействии силы. Связность &mdash; это
        мера инертности кода или готовности к быстрым модификациям под действием наших усилий.
    </p>

    <p>
        Но мы мало о возрастающей силе пренебрежения
        <a class="todo" href="#/ru/wiki/zakon-demetry">законом Деметры</a>. Пойдя на поводу лени
        и допуская на некотором участке кода сильную связность мы предполагаем, что это временная
        проблема только этого участка, которую впоследствии можно решить. На самом деле &mdash;
        это еще одна монетка в копилку все возрастающей гравитации кода, которая с усиленным
        рвением начнет побуждать нас снова и снова создавать сильносвязный код. Ведь чем дальше,
        тем больше усилий потребуется для того, чтобы провести его рефакторинг и преодолеть
        эту силу.
    </p>
    <p>
        Звезда под действием гравитации может пройти путь от облака газа до черной дыры. Хотим
        ли мы, чтобы наш код оказался в такой же дыре?
    </p>
</div>
